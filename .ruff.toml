# Ruff configuration for I3 Gateway
# Updated December 2024 with latest Ruff features and best practices

target-version = "py39"  # Match minimum Python version from pyproject.toml
line-length = 100  # Match Black configuration from pyproject.toml

[lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "UP",     # pyupgrade
    "ARG",    # flake8-unused-arguments
    "SIM",    # flake8-simplify
    "PTH",    # flake8-use-pathlib
    "RUF",    # Ruff-specific rules
    "N",      # pep8-naming
    "D",      # pydocstyle
    "ANN",    # flake8-annotations
    "S",      # flake8-bandit
    "ASYNC",  # flake8-async
    "T20",    # flake8-print
    "RET",    # flake8-return
    "SLF",    # flake8-self
    "RSE",    # flake8-raise
    "PL",     # pylint
    "ERA",    # flake8-eradicate (remove commented code)
    "ICN",    # flake8-import-conventions
    "PIE",    # flake8-pie
    "Q",      # flake8-quotes
    "DTZ",    # flake8-datetimez
    "EM",     # flake8-errmsg
    "FA",     # flake8-future-annotations
    "G",      # flake8-logging-format
    "INP",    # flake8-no-pep420
    "PIE",    # flake8-pie
    "T10",    # flake8-debugger
    "YTT",    # flake8-2020
]

ignore = [
    "D100",    # Missing docstring in public module
    "D104",    # Missing docstring in public package
    "D107",    # Missing docstring in __init__
    "D203",    # 1 blank line required before class docstring
    "D212",    # Multi-line docstring summary should start at the first line
    "ANN101",  # Missing type annotation for self
    "ANN102",  # Missing type annotation for cls
    "ANN401",  # Dynamically typed expressions (Any) are disallowed
    "PLR0913", # Too many arguments to function call
    "PLR0915", # Too many statements
    "PLR0912", # Too many branches
    "PLR2004", # Magic value used in comparison
    "S101",    # Use of assert detected
    "S311",    # Standard pseudo-random generators are not suitable for security/cryptographic purposes
    "EM101",   # Exception must not use a string literal, assign to variable first
    "EM102",   # Exception must not use an f-string literal, assign to variable first
    "G004",    # Logging statement uses f-string
    "INP001",  # File is part of an implicit namespace package
]

fixable = ["ALL"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".git",
    ".ruff_cache",
    ".venv",
    "venv",
    "__pypackages__",
    "__pycache__",
    "dist",
    "build",
    "htmlcov",
    "*.egg-info",
    ".mypy_cache",
    ".pytest_cache",
    ".tox",
    "node_modules",
    "data",
    "logs",
    "cache",
]

[lint.per-file-ignores]
"tests/**/*.py" = [
    "S101",    # asserts are fine in tests
    "ARG",     # unused arguments are ok in tests
    "D",       # don't need docstrings in tests
    "ANN",     # type annotations optional in tests
    "PLR2004", # Magic values are ok in tests
    "PLR0913", # Too many arguments OK in tests
    "PLR0915", # Too many statements OK in tests
    "S311",    # Random generators OK in tests
    "SLF001",  # Private member access OK in tests
]
"**/__init__.py" = [
    "F401",    # Allow unused imports in __init__ files
    "D104",    # Missing docstring in public package
]
"src/__main__.py" = [
    "T20",     # Print statements allowed in main
]
"clients/examples/*.py" = [
    "T20",     # Print statements allowed in examples
    "S101",    # Asserts allowed in examples
]

[lint.isort]
known-first-party = ["src"]
force-single-line = false
lines-after-imports = 2
combine-as-imports = true
split-on-trailing-comma = true

[lint.pydocstyle]
convention = "google"

[lint.flake8-quotes]
inline-quotes = "double"
multiline-quotes = "double"
docstring-quotes = "double"

[lint.pylint]
max-args = 8
max-branches = 15
max-returns = 8
max-statements = 60

[lint.flake8-import-conventions.aliases]
# Standard library aliases
datetime = "dt"
numpy = "np"
pandas = "pd"
matplotlib = "mpl"
"matplotlib.pyplot" = "plt"
seaborn = "sns"

[format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = 80
