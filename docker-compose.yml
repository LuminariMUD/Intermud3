# Intermud3 Gateway Service - Docker Compose Configuration
# Phase 3 COMPLETE (2025-08-20): Full API implementation with WebSocket & TCP support
# Test coverage: ~75-78% | 1200+ tests | Production-ready

version: '3.8'

services:
  i3-gateway:
    build:
      context: .
      dockerfile: Dockerfile
    image: i3-gateway:latest
    container_name: i3-gateway
    restart: unless-stopped
    ports:
      - "8080:8080"  # WebSocket API port
      - "8081:8081"  # TCP API port
      - "9090:9090"  # Metrics/health port
    volumes:
      - ./config:/app/config:ro
      - ./logs:/app/logs
      - ./state:/app/state
      - ./.env:/app/.env:ro
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - MUD_NAME=${MUD_NAME}
      - MUD_PORT=${MUD_PORT}
      - I3_ROUTER_HOST=${I3_ROUTER_HOST:-204.209.44.3}
      - I3_ROUTER_PORT=${I3_ROUTER_PORT:-8080}
      - API_WS_HOST=0.0.0.0
      - API_WS_PORT=8080
      - API_TCP_HOST=0.0.0.0
      - API_TCP_PORT=8081
      - I3_GATEWAY_SECRET=${I3_GATEWAY_SECRET}
    networks:
      - i3-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"] 
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Optional: Add a monitoring service
  prometheus:
    image: prom/prometheus:latest
    container_name: i3-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - i3-network
    profiles:
      - monitoring

  # Optional: Add Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: i3-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_INSTALL_PLUGINS=
    networks:
      - i3-network
    profiles:
      - monitoring

networks:
  i3-network:
    driver: bridge

volumes:
  prometheus-data:
  grafana-data: